name: Bygg og deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BASE_IMAGE: docker.pkg.github.com/${{ github.repository }}/omsorgspenger-proxy
  GITHUB_USERNAME: x-access-token
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v2
        with:
          java-version: 15
          distribution: 'adopt'
      - uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Bygge JAR
        run: |
          ./gradlew test shadowjar
          echo "TAG=$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "IMAGE=$BASE_IMAGE:$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Bygg & last opp Docker image
        run: |
          docker build --pull --tag ${BASE_IMAGE}:${TAG} --tag ${BASE_IMAGE}:latest .
          echo ${GITHUB_TOKEN} | docker login --username ${GITHUB_REPOSITORY} --password-stdin ghcr.io
          docker push ${BASE_IMAGE}:${TAG}
          docker push ${BASE_IMAGE}:latest

      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/naiserator.yaml
          VARS: nais/dev-fss.json

      - name: Deploy til prod-fss
        if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'ci skip')
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/naiserator.yaml
          VARS: nais/prod-fss.json
